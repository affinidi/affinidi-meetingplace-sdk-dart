import 'dart:typed_data';

import '../lib/chat_sdk.dart';
import '../lib/src/chat_sdk.dart';
import '../lib/src/sdk/chat_sdk_options.dart';
import 'package:mpx_sdk/mpx_sdk.dart';
import 'package:ssi/ssi.dart';
import 'package:test/test.dart';
import '../../../examples/utils.dart';
import 'fixture/repository/chat_repository_impl.dart';
import 'fixture/storage/in_memory_storage.dart';

void main() async {
  late MpxSDK sdk;

  Channel getChannel(ChannelType type) => Channel(
        offerLink: '',
        publishOfferDid: '',
        mediatorDid: '',
        status: ChannelStatus.inaugaurated,
        vCard: VCard(values: {}),
        type: type,
        permanentChannelDid: 'did:key:123',
        otherPartyPermanentChannelDid: 'did:key:456',
      );

  setUpAll(() async {
    final aliceSeed = Uint8List.fromList(MpxSDK.getRandomSeed(32));
    final aliceWallet = Bip32Wallet.fromSeed(aliceSeed);
    sdk = await initSDK(wallet: aliceWallet, seed: aliceSeed);
  });

  // test('individual chat SDK instance for channel type individual', () async {
  //   final channel = getChannel(ChannelType.individual);
  //   final chatSDK = ChatSDK.initialiseFromChannel(
  //     channel,
  //     mpxSdk: sdk,
  //     chatRepository: ChatRepositoryImpl(storage: InMemoryStorage()),
  //     options: ChatSDKOptions(),
  //   );

  //   await chatSDK.sendTextMessage('Hello World!');

  //   expect(actual, isA<IndividualChatSDK>());
  // });

  // test('group chat SDK instance for channel type group', () async {
  //   final channel = getChannel(ChannelType.group);
  //   final actual = ChatSDKInitialization.initialiseFromChannel(
  //     channel,
  //     mpxSdk: sdk,
  //     chatRepository: ChatRepositoryImpl(storage: InMemoryStorage()),
  //     options: ChatSDKOptions(),
  //   );

  //   expect(actual, isA<GroupChatSDK>());
  // });

  // test('individual chat SDK instance for channel type oob', () async {
  //   final channel = getChannel(ChannelType.oob);
  //   final actual = ChatSDKInitialization.initialiseFromChannel(
  //     channel,
  //     mpxSdk: sdk,
  //     chatRepository: ChatRepositoryImpl(storage: InMemoryStorage()),
  //     options: ChatSDKOptions(),
  //   );

  //   expect(actual, isA<IndividualChatSDK>());
  // });
}
